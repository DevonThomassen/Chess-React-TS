[{"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\index.tsx":"1","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\reportWebVitals.ts":"2","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\App.tsx":"3","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Game.tsx":"4","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Board.tsx":"5","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Piece.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":175,"mtime":1612202138287,"results":"10","hashOfConfig":"8"},{"size":182,"mtime":1612178080702,"results":"11","hashOfConfig":"8"},{"size":2887,"mtime":1612274703785,"results":"12","hashOfConfig":"8"},{"size":1124,"mtime":1612274629258,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18q996e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\index.tsx",[],["29","30"],"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\reportWebVitals.ts",[],"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\App.tsx",[],"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Game.tsx",[],"C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Board.tsx",["31","32","33"],"import React, { useCallback, useState } from 'react';\r\nimport Piece, { Colour, PieceType } from './Piece';\r\n\r\ntype BoardSquare = (PieceType | null);\r\ntype BoardRow = BoardSquare[];\r\ntype Board = BoardRow[];\r\n\r\ninterface State {\r\n  player: Colour;\r\n  board: Board;\r\n}\r\n\r\ninterface BaseRowProps {\r\n  row: number;\r\n}\r\n\r\ninterface RowProps extends BaseRowProps {\r\n  rowData: BoardRow;\r\n}\r\n\r\ninterface SquareProps extends BaseRowProps {\r\n  col: number;\r\n  colData?: BoardSquare;\r\n}\r\n\r\nconst Board = () => {\r\n\r\n  const boardInit: Board = [\r\n    [\"bRook\", \"bKnight\", \"bBishop\", \"bQueen\", \"bKing\", \"bBishop\", \"bKnight\", \"bRook\"],\r\n    [\"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\",],\r\n    [null, null, null, null, null, null, null, null,],\r\n    [null, null, null, null, null, null, null, null,],\r\n    [null, null, null, null, null, null, null, null,],\r\n    [null, null, null, null, null, null, null, null,],\r\n    [\"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\",],\r\n    [\"wRook\", \"wKnight\", \"wBishop\", \"wQueen\", \"wKing\", \"wBishop\", \"wKnight\", \"wRook\"],\r\n  ];\r\n\r\n  const [state, setState] = useState<State>({\r\n    player: \"w\",\r\n    board: boardInit\r\n  });\r\n\r\n  // const onTurn = useCallback(() => {\r\n  //   setState({\r\n  //     player: state.player === \"w\" ? \"b\" : \"w\",\r\n  //     board: [\r\n  //       [\"bRook\", \"bKnight\", \"bBishop\", \"bQueen\", \"bKing\", \"bBishop\", \"bKnight\", \"bRook\"],\r\n  //       [\"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\", \"bPawn\",],\r\n  //       [null, null, null, null, null, null, null, null,],\r\n  //       [null, null, null, null, null, null, null, null,],\r\n  //       [null, null, null, null, null, null, null, null,],\r\n  //       [null, null, null, null, null, null, null, null,],\r\n  //       [\"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\", \"wPawn\",],\r\n  //       [\"wRook\", \"wKnight\", \"wBishop\", \"wQueen\", \"wKing\", \"wBishop\", \"wKnight\", \"wRook\"],\r\n  //     ]\r\n  //   });\r\n  // }, [state.player]);\r\n\r\n  console.log(state.board);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {state.board.map((_, i) => (\r\n        <Row key={i} row={i} rowData={state.board[i]} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Row = ({ row, rowData }: RowProps) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {rowData.map((v, i) => (\r\n        <Square key={i} row={row} col={8 - i} colData={v} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Square = ({ row, col, colData }: SquareProps) => {\r\n\r\n  const isWhite = () => {\r\n    return row % 2 ? (col % 2) : !(col % 2);\r\n  }\r\n\r\n  const position = String.fromCharCode(97 + row) + col.toString();\r\n\r\n  return (\r\n    <div className={`square ${isWhite() ? \"white\" : \"black\"}`}>\r\n      { colData! ? <Piece key={`${row}${col}`} id={colData} position={`${row}${col}`} /> : null}\r\n      <p className=\"location\">{position}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","C:\\Users\\Devon\\Documents\\Programming\\chess-react-ts\\src\\Components\\Piece.tsx",["34","35"],"import React from 'react';\r\n\r\nexport type Colour = \"w\" | \"b\";\r\nexport type Type = \"King\" | \"Queen\" | \"Rook\" | \"Knight\" | \"Bishop\" | \"Pawn\";\r\nexport type PieceType = `${Colour}${Type}`;\r\n\r\ntype Pieces = Record<PieceType, ReturnType<typeof require>>;\r\nconst pieces: Pieces = {\r\n  wKing: require(\"../assets/wKing.png\"),\r\n  wQueen: require(\"../assets/wQueen.png\"),\r\n  wRook: require(\"../assets/wRook.png\"),\r\n  wKnight: require(\"../assets/wKnight.png\"),\r\n  wBishop: require(\"../assets/wBishop.png\"),\r\n  wPawn: require(\"../assets/wPawn.png\"),\r\n  bKing: require(\"../assets/bKing.png\"),\r\n  bQueen: require(\"../assets/bQueen.png\"),\r\n  bRook: require(\"../assets/bRook.png\"),\r\n  bKnight: require(\"../assets/bKnight.png\"),\r\n  bBishop: require(\"../assets/bBishop.png\"),\r\n  bPawn: require(\"../assets/bPawn.png\"),\r\n}\r\n\r\ninterface PieceProps {\r\n  id: PieceType;\r\n  position: String;\r\n}\r\n\r\nconst Piece = ({ id, position }: PieceProps) => {\r\n  const [col, row] = position.split('').map(s => parseInt(s));\r\n\r\n  return (\r\n    <div className=\"piece\">\r\n      <img src={pieces[id].default} alt={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Piece;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":26,"column":7,"nodeType":"42","messageId":"46","endLine":26,"endColumn":12},{"ruleId":"40","severity":1,"message":"47","line":39,"column":17,"nodeType":"42","messageId":"43","endLine":39,"endColumn":25},{"ruleId":"40","severity":1,"message":"48","line":29,"column":10,"nodeType":"42","messageId":"43","endLine":29,"endColumn":13},{"ruleId":"40","severity":1,"message":"49","line":29,"column":15,"nodeType":"42","messageId":"43","endLine":29,"endColumn":18},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'Board' is already defined.","redeclared","'setState' is assigned a value but never used.","'col' is assigned a value but never used.","'row' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]